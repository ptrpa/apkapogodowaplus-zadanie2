name: Build & Push Multiarch Docker Image with Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    name: Build and Scan
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build image and export to tar
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: linux/amd64
          tags: ghcr.io/ptrpa/apkapogodowaplus-zadanie2:latest
          outputs: type=docker,dest=output.tar

      - name: Run Trivy scan on image tar
        uses: aquasecurity/trivy-action@0.11.2
        with:
          input: output.tar
          format: table
          output: trivy-report.txt
          github-pat: ${{ secrets.GHCR_TOKEN }}
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Upload image tar
        uses: actions/upload-artifact@v4
        with:
          name: built-image
          path: output.tar

      - name: Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

  push:
    name: Push to GHCR
    runs-on: ubuntu-22.04
    needs: build-and-scan
    if: success()

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: built-image
          path: .

      - name: Load Docker image
        run: docker load -i output.tar

      - name: Push image to GHCR
        run: |
          docker tag ghcr.io/ptrpa/apkapogodowaplus-zadanie2:latest ghcr.io/ptrpa/apkapogodowaplus-zadanie2:latest
          docker push ghcr.io/ptrpa/apkapogodowaplus-zadanie2:latest
